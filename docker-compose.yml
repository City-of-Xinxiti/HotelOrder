version: '3.8'

services:
  # 注意：使用阿里云RDS，不需要本地MySQL容器
  # 数据库连接配置在环境变量中设置

  # 后端服务
  backend:
    build: 
      context: ./HotelBack
      dockerfile: Dockerfile
    container_name: hotel-backend
    environment:
      # 阿里云RDS数据库连接配置
      SPRING_DATASOURCE_URL: ${RDS_URL:-jdbc:mysql://your-rds-endpoint.mysql.rds.aliyuncs.com:3306/hotelorder?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=Asia/Shanghai}
      SPRING_DATASOURCE_USERNAME: ${RDS_USERNAME:-your_username}
      SPRING_DATASOURCE_PASSWORD: ${RDS_PASSWORD:-your_password}
      # 锦江API配置
      JINJIANG_API_BASE_URL: ${JINJIANG_API_BASE_URL:-https://bizfzout.bestwehotel.com/proxy/ms-corp-directly-connect}
      JINJIANG_APP_ID: ${JINJIANG_APP_ID:-924497e9-be62-4128-950d-f626657fcd64}
      JINJIANG_APP_SECRET: ${JINJIANG_APP_SECRET:-65b299b0-27cb-4360-b181-accf1034bef2}
    ports:
      - "${BACKEND_PORT:-8082}:8082"
    # 使用阿里云RDS，无需等待本地数据库
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    build: 
      context: ./HotelOrder
      dockerfile: Dockerfile
    container_name: hotel-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - hotel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

# 使用阿里云RDS，无需本地数据卷

networks:
  hotel-network:
    driver: bridge
